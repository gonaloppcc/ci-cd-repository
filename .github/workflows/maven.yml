# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

env:
  docker_image_name: academy
  docker_tag_name: 1.0
  docker_image_artifact_name: docker_image_artifact

  POSTGRES_USER: academy
  POSTGRES_PASSWORD: academy
  POSTGRES_DB: postgres

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./resources/base_code

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: ${{env.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{env.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{env.POSTGRES_DB}}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - uses: ./.github/actions/maven_build

      - uses: ./.github/actions/docker_build
        with:
          image_name: $docker_image_name
          tag_name: $docker_tag_name
      - name: Save the docker image to a file
        run: docker save -o ${{env.docker_image_name}}.tar $docker_image_name:$docker_tag_name
        shell: bash

      - name: Upload the docker image file as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.docker_image_artifact_name}}
          path: "./resources/base_code/${{env.docker_image_name}}.tar"

  new_job:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Download the docker image file
        uses: actions/download-artifact@v4
        with:
          name: ${{env.docker_image_artifact_name}}

      - name: Load docker image
        run: docker load -i ${{env.docker_image_name}}.tar

      - name: See the Docker Images
        run: docker image ls
        shell: bash

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker push
        uses: ./.github/actions/docker_push
        with:
          docker_username: ${{ secrets.DOCKERHUB_USERNAME }}
          docker_image_name: ${{ env.docker_image_name }}:${{ env.docker_tag_name }}